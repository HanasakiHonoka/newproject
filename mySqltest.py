# encoding: utf-8
# @FileName  :mySqltest.py
# @Time      :2020/8/3 2:57
# @Author    :XZX

import pymysql
import urllib.parse as parse
from string import Template

list_temp = Template('''
<div>
        <span>${id}</span>
        <a href="https://baike.baidu.com/item/${name_e}" target="_blank">${name}</a>
    </div>
''')







name_list = ['大梦西游','憨爸','我的同桌是极品','拯救汪星人大作战','犬心犬意','坚强的小孩','老九门番外之二月花开','人鱼校花','玩命直播','练胆儿','我和我们','魔兽兄弟','极道校园','日夜男女','盲少爷的小女仆','无限斗界之暗夜双龙','月老神龟','醉了青春之男人帮','艾米粒日记','老九门番外之虎骨梅花','逆天侠盗团：百盗之局','股神3之控庄者','暴君画家的情人','寻之亲爱的小孩','妈妈2016','炫武','女朋友&女朋友','狗脸记','英雄江格尔','嗜血将军','时光插班生','冒牌货','王贵与李香香','神笔马娘','离婚真难','误闯疯人院','异类之行走的古堡','虚拟情人','黑白道血泪篇','仙班校园','一路向南','吸血鬼侦探','大明锦衣卫','恋爱勿语','渣能天团之巨能足球','仙医神厨','仙班校园2','特异犯罪调查科','铁柱进城','如果没有遇见你','人工智能：伏羲觉醒','罪案主播','笑八仙之吕洞宾下山','赌途','死亡记忆','毒语者之毒奏','雪夜魂飞','所爱非人','永生之书之白房间','超能特务','绝色追击','爱情与尊严','Angela拉拉','找个欧巴是爸爸','江南皮革厂','白雾谜岸','好人谢谢你','红色记忆','毕业300天','末代掌门','寡妇刺客','特殊嫌疑犯','狼的爱情','老九门番外之恒河杀树','那年我们十八岁','最佳合伙人','天使请吻我','干掉小明','变形活宝','建群囧事','中国兵王','全金属裂痕','降龙传说','换种方式','怕羞的木头人','赌神来了','斗地主传奇','中二病少女要拯救世界','红色之旅','江湖人仕','亲爸','如果我们在一起生活','当我成为你','宝器','深海X异种','绝色之战','秘密商店','超时空谋杀','漂浮','超级神仙石','河东师情','世纪情缘','亡命时空','不合理蛙','鬼火','山影迷踪','火锅青春','横囧之银行大劫案','青春嗨起来','湘恋日记','圈子','遗失的美好','盗宝奇葩之猎肉杀身','黑暗料理','太囧升职记','探魔导师','奇侠']
# name_list = ['大海与天使','留夏','缞神契约','再见路星河','告诉你们什么是Hip Hop','哀乐女子天团','甩尾王','大梦西游2铁扇公主','真爱甜蜜美厨娘','小小爸爸','超能恋爱学院','毒舌上司校花妹','会长的贴身校花','乱世豪情','传销风云','傲娇千金惹人醉','星游记之风暴法米拉','我的同桌是学霸','我们那年','热血少女','72天搞定你','摘星的女孩','笑嗷喜剧人','北平以北','宇宙中心五盗口','阔少家的小魔头','见习天神','跃迁管理局','御厨大作战-姐姐好饿剧场版','我的高考我的班','萌宝找辣妈','超隐形男友','仙医神厨之上海任务','仙医神厨2','岁月是把杀猪刀','六盘山之恋','总裁的特工宠妻','许多年以后','我是中国DOTA的希望','大英雄','捉妖战记','旋风辣妹','后座上的杀手','不结婚','幸运女神与倒霉蛋','浪漫骑士请放手','淘宝女孩的好评爱情','搏击傲娇小女生']
# print()


def find_network():
    conn = pymysql.Connect(user='root', password='z960518', db='movie_analysis_v2')
    # name_list_r = name_list[:10]
    for title in name_list:
        sql = "SELECT id, title FROM movie_table WHERE id > 1934 AND id <= 2811 and title = '"  + title + "'"
        cursor = conn.cursor()
        cursor.execute(sql)
        result = cursor.fetchall()
        for row in result:
            id = row[0]
            name = row[1]
            name_e = parse.quote(row[1])
            res = str(id) + '   ' + name
            # res = list_temp.substitute(id=id, name=name, name_e=name_e)
            print(res)
    conn.close()
    pass


if __name__ == '__main__':
    find_network()
    pass
# ''